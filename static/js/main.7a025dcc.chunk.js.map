{"version":3,"sources":["App.js","index.js"],"names":["foodDictionary","emojiList","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","inputEmoji","target","value","map","item","style","fontSize","padding","cursor","onClick","handleClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kLAEMA,EAAiB,CACrB,eAAM,QACN,eAAM,cACN,eAAM,cACN,eAAM,cACN,eAAM,WACN,eAAM,WACN,eAAM,OACN,eAAM,SACN,eAAM,QACN,eAAM,UACN,eAAM,QACN,eAAM,YACN,eAAM,SACN,eAAM,WACN,eAAM,YAEJC,EAAYC,OAAOC,KAAKH,GACb,SAASI,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAaA,OACE,sBAAKC,UAAU,MAAf,UACE,iDACA,uBAAOC,SAfX,SAAwBC,GACtB,IAAIC,EAAaD,EAAME,OAAOC,MAE5BN,EADEI,KAAcX,EACLA,EAAeW,GAEf,4BAWX,6BAAKL,IACJL,EAAUa,KAAI,SAACC,GACd,OACE,sBACEC,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAEtDC,QAAS,YAdnB,SAAqBL,GACnBR,EAAWP,EAAee,IAchBM,CAAYN,IAJhB,SAOGA,GALIA,SCtCjB,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACtB,EAAD,MAEFkB,I","file":"static/js/main.7a025dcc.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nconst foodDictionary = {\n  \"üçï\": \"pizza\",\n  \"üç§\": \"fried prawn\",\n  \"üçó\": \"polutry leg\",\n  \"ü•ó\": \"green salad\",\n  \"ü•™\": \"sandwich\",\n  \"ü•û\": \"pancakes\",\n  \"üéÇ\": \"cake\",\n  \"üçî\": \"burger\",\n  \"üçü\": \"fries\",\n  \"üçú\": \"noodles\",\n  \"üç£\": \"sushi\",\n  \"üç¶\": \"ice-cream\",\n  \"üç™\": \"cookie\",\n  \"üç©\": \"doughnut\",\n  \"üç≠\": \"lollipop\"\n};\nvar emojiList = Object.keys(foodDictionary);\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n  function handleOnChange(event) {\n    var inputEmoji = event.target.value;\n    if (inputEmoji in foodDictionary) {\n      setMeaning(foodDictionary[inputEmoji]);\n    } else {\n      setMeaning(\"Emoji not recognized.\");\n    }\n  }\n  function handleClick(item) {\n    setMeaning(foodDictionary[item]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Food Dictionary</h1>\n      <input onChange={handleOnChange}></input>\n      <h1>{meaning}</h1>\n      {emojiList.map((item) => {\n        return (\n          <span\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={item}\n            onClick={() => {\n              handleClick(item);\n            }}\n          >\n            {item}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}